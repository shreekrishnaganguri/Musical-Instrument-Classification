{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1OOAwFhTvb6ocaIMfve8sOhzv7dvaGtms","timestamp":1718775311466},{"file_id":"1Tuz0GBdhIdfbRs5jxAHSN7kkwVs9bRi0","timestamp":1718707405341},{"file_id":"1e90LQQXQ1n5ugUtNBweRh84ophGdbNFX","timestamp":1715661468073}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"XxRot5BR80XL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718860299262,"user_tz":-330,"elapsed":29550,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"336b57d5-dc27-4495-897b-e6d3cb441576"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["### Load the CSV files\n","\n","- Please uploadn the created the train and test CSV files to the colab environment."],"metadata":{"id":"3peN1O4wWu1P"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"xHIvtz3bUoGj","executionInfo":{"status":"ok","timestamp":1718860406448,"user_tz":-330,"elapsed":535,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}}},"outputs":[],"source":["# define the paths\n","TRAIN_CSV = \"/content/drive/MyDrive/AIClub_AP_Shree_Krishna /Data Sets/music_instrument_features_train.csv\"\n","TEST_CSV = \"/content/drive/MyDrive/AIClub_AP_Shree_Krishna /Data Sets/music_instrument_features_test.csv\""]},{"cell_type":"code","source":["import pandas as pd\n","\n","# load the train csv\n","data_train = pd.read_csv(TRAIN_CSV)\n","data_train.head()"],"metadata":{"id":"q3UeS-qXZv5Q","colab":{"base_uri":"https://localhost:8080/","height":256},"executionInfo":{"status":"ok","timestamp":1718860410158,"user_tz":-330,"elapsed":1537,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"a7618e6e-21ee-485a-ccde-b8ca8def7838"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       RMSE  SPECTRAL_CENTROID  SPECTRAL_BANDWIDTH      ROLLOFF  \\\n","0  0.062325        2316.989020         2757.101549  5547.035945   \n","1  0.202179        2671.323870         2686.613461  5805.765663   \n","2  0.045504         907.921383         1027.232235  1437.755409   \n","3  0.026259         437.364110          711.886751   652.621695   \n","4  0.052508         821.558837          979.045588  1135.876465   \n","\n","   ZERO_CROSSING_RATE  MFCC_FEATURE_0  MFCC_FEATURE_1  MFCC_FEATURE_2  \\\n","0            0.084672      -187.26079        89.72672       21.389318   \n","1            0.128249        -4.85361        83.54674        0.746411   \n","2            0.063886      -307.56058       192.76907      -23.081457   \n","3            0.028279      -470.48984       236.54242       62.554170   \n","4            0.060675      -337.16296       200.18973        5.095531   \n","\n","   MFCC_FEATURE_3  MFCC_FEATURE_4  ...  MFCC_FEATURE_11  MFCC_FEATURE_12  \\\n","0       22.149347        3.905026  ...         3.366895         0.238650   \n","1       30.466993        9.416390  ...         3.446559        -2.810793   \n","2       15.368303       -8.382542  ...        -9.424538        -7.596852   \n","3        0.513728        4.260558  ...        -0.933101        -6.501129   \n","4      -18.062876       -1.523398  ...        -5.295030        -4.428859   \n","\n","   MFCC_FEATURE_13  MFCC_FEATURE_14  MFCC_FEATURE_15  MFCC_FEATURE_16  \\\n","0         0.306749        -9.776440        -6.835085        -6.527420   \n","1         0.588865        -4.093653        -1.115683        -2.824470   \n","2        -4.458697         1.292051         2.826587         2.027088   \n","3        -9.897833        -6.918441        -5.304530        -8.581144   \n","4         0.438058        -4.329932        -5.488426        -0.991266   \n","\n","   MFCC_FEATURE_17  MFCC_FEATURE_18  MFCC_FEATURE_19            LABEL  \n","0         0.002186        -2.380433         3.513683            piano  \n","1         0.741342        -8.780810        -3.132610  electric_guitar  \n","2         1.076499        -0.412366        -3.329628            piano  \n","3        -8.919804        -2.112768         3.097034            piano  \n","4        -3.633189        -7.330574        -1.882433            piano  \n","\n","[5 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-f448fbdb-1847-47cf-8419-ee0ea32aee1f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>RMSE</th>\n","      <th>SPECTRAL_CENTROID</th>\n","      <th>SPECTRAL_BANDWIDTH</th>\n","      <th>ROLLOFF</th>\n","      <th>ZERO_CROSSING_RATE</th>\n","      <th>MFCC_FEATURE_0</th>\n","      <th>MFCC_FEATURE_1</th>\n","      <th>MFCC_FEATURE_2</th>\n","      <th>MFCC_FEATURE_3</th>\n","      <th>MFCC_FEATURE_4</th>\n","      <th>...</th>\n","      <th>MFCC_FEATURE_11</th>\n","      <th>MFCC_FEATURE_12</th>\n","      <th>MFCC_FEATURE_13</th>\n","      <th>MFCC_FEATURE_14</th>\n","      <th>MFCC_FEATURE_15</th>\n","      <th>MFCC_FEATURE_16</th>\n","      <th>MFCC_FEATURE_17</th>\n","      <th>MFCC_FEATURE_18</th>\n","      <th>MFCC_FEATURE_19</th>\n","      <th>LABEL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.062325</td>\n","      <td>2316.989020</td>\n","      <td>2757.101549</td>\n","      <td>5547.035945</td>\n","      <td>0.084672</td>\n","      <td>-187.26079</td>\n","      <td>89.72672</td>\n","      <td>21.389318</td>\n","      <td>22.149347</td>\n","      <td>3.905026</td>\n","      <td>...</td>\n","      <td>3.366895</td>\n","      <td>0.238650</td>\n","      <td>0.306749</td>\n","      <td>-9.776440</td>\n","      <td>-6.835085</td>\n","      <td>-6.527420</td>\n","      <td>0.002186</td>\n","      <td>-2.380433</td>\n","      <td>3.513683</td>\n","      <td>piano</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.202179</td>\n","      <td>2671.323870</td>\n","      <td>2686.613461</td>\n","      <td>5805.765663</td>\n","      <td>0.128249</td>\n","      <td>-4.85361</td>\n","      <td>83.54674</td>\n","      <td>0.746411</td>\n","      <td>30.466993</td>\n","      <td>9.416390</td>\n","      <td>...</td>\n","      <td>3.446559</td>\n","      <td>-2.810793</td>\n","      <td>0.588865</td>\n","      <td>-4.093653</td>\n","      <td>-1.115683</td>\n","      <td>-2.824470</td>\n","      <td>0.741342</td>\n","      <td>-8.780810</td>\n","      <td>-3.132610</td>\n","      <td>electric_guitar</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.045504</td>\n","      <td>907.921383</td>\n","      <td>1027.232235</td>\n","      <td>1437.755409</td>\n","      <td>0.063886</td>\n","      <td>-307.56058</td>\n","      <td>192.76907</td>\n","      <td>-23.081457</td>\n","      <td>15.368303</td>\n","      <td>-8.382542</td>\n","      <td>...</td>\n","      <td>-9.424538</td>\n","      <td>-7.596852</td>\n","      <td>-4.458697</td>\n","      <td>1.292051</td>\n","      <td>2.826587</td>\n","      <td>2.027088</td>\n","      <td>1.076499</td>\n","      <td>-0.412366</td>\n","      <td>-3.329628</td>\n","      <td>piano</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.026259</td>\n","      <td>437.364110</td>\n","      <td>711.886751</td>\n","      <td>652.621695</td>\n","      <td>0.028279</td>\n","      <td>-470.48984</td>\n","      <td>236.54242</td>\n","      <td>62.554170</td>\n","      <td>0.513728</td>\n","      <td>4.260558</td>\n","      <td>...</td>\n","      <td>-0.933101</td>\n","      <td>-6.501129</td>\n","      <td>-9.897833</td>\n","      <td>-6.918441</td>\n","      <td>-5.304530</td>\n","      <td>-8.581144</td>\n","      <td>-8.919804</td>\n","      <td>-2.112768</td>\n","      <td>3.097034</td>\n","      <td>piano</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.052508</td>\n","      <td>821.558837</td>\n","      <td>979.045588</td>\n","      <td>1135.876465</td>\n","      <td>0.060675</td>\n","      <td>-337.16296</td>\n","      <td>200.18973</td>\n","      <td>5.095531</td>\n","      <td>-18.062876</td>\n","      <td>-1.523398</td>\n","      <td>...</td>\n","      <td>-5.295030</td>\n","      <td>-4.428859</td>\n","      <td>0.438058</td>\n","      <td>-4.329932</td>\n","      <td>-5.488426</td>\n","      <td>-0.991266</td>\n","      <td>-3.633189</td>\n","      <td>-7.330574</td>\n","      <td>-1.882433</td>\n","      <td>piano</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 26 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f448fbdb-1847-47cf-8419-ee0ea32aee1f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f448fbdb-1847-47cf-8419-ee0ea32aee1f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f448fbdb-1847-47cf-8419-ee0ea32aee1f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2dd5acb3-0a4a-4671-ab7b-d31b48bba55d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2dd5acb3-0a4a-4671-ab7b-d31b48bba55d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2dd5acb3-0a4a-4671-ab7b-d31b48bba55d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_train"}},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["### Encoding Labels"],"metadata":{"id":"2gXakmvncLl8"}},{"cell_type":"code","source":["# labels are there as string otherwise words\n","# need to convert the labels into numbers\n","print(data_train[\"LABEL\"].value_counts())\n","LABELS = list(data_train[\"LABEL\"].unique())\n","# sort the labels\n","LABELS.sort()\n","print(LABELS)"],"metadata":{"id":"a2-9NY2RcLL5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718860414715,"user_tz":-330,"elapsed":492,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"81e655cd-f627-47d5-c6dc-b0643ef87276"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["LABEL\n","electric_guitar    616\n","piano              568\n","Name: count, dtype: int64\n","['electric_guitar', 'piano']\n"]}]},{"cell_type":"markdown","source":["### Encoding Structure\n","- We are encoding the labels in alphabetical order.\n","- electric_guitar gets 0 while piano gets 1."],"metadata":{"id":"g8BIOS3tc4a-"}},{"cell_type":"code","source":["# convert into numbers\n","data_train[\"LABEL\"] = pd.factorize(data_train[\"LABEL\"], sort = True)[0]\n","data_train[\"LABEL\"].value_counts()"],"metadata":{"id":"3YuTvBrhcdPp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718860418035,"user_tz":-330,"elapsed":706,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"29ae8068-c25f-4ec7-ed27-fadee3a6dd32"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LABEL\n","0    616\n","1    568\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["### Seperate features and labels\n","- Label is at the last index which we can reference by -1"],"metadata":{"id":"8DMnRrFQaBRf"}},{"cell_type":"code","source":["# get all features without the labels\n","# all the rows\n","# all the columns without the last column\n","X = data_train.iloc[:, :-1].values\n","# all rows\n","# only the lastb column, which is the label\n","Y = data_train.iloc[:, -1].values"],"metadata":{"id":"KSqIZACfZ26N","executionInfo":{"status":"ok","timestamp":1718860421558,"user_tz":-330,"elapsed":464,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":["### Train the Model using Cross Validation"],"metadata":{"id":"NiB8dna9bo3B"}},{"cell_type":"code","source":["\n","from sklearn.model_selection import KFold\n","from sklearn.metrics import accuracy_score, precision_score, recall_score\n","import numpy as np\n","\n","def cross_validation(model, data = (X, Y), splits = 5):\n","    kf = KFold(n_splits=splits, shuffle=True, random_state=42)\n","\n","    # Perform k-fold cross-validation\n","    accuracy = []\n","    precision = []\n","    recall = []\n","    print(kf.split(data[0]))\n","    for train_index, valid_index in kf.split(data[0]):\n","        X_train, X_valid = data[0][train_index], data[0][valid_index]\n","        y_train, y_valid = data[1][train_index], data[1][valid_index]\n","\n","        # Fit the defined model\n","        model.fit(X_train, y_train)\n","\n","        # Make predictions on the test data\n","        y_pred = model.predict(X_valid)\n","\n","        # Calculate accuracy, precision and recall\n","        accuracy.append(accuracy_score(y_pred, y_valid))\n","        precision.append(precision_score(y_pred, y_valid))\n","        recall.append(recall_score(y_pred, y_valid))\n","\n","\n","    # get arrays\n","    accuracy_set = np.array(accuracy)\n","    precision_set = np.array(precision)\n","    recall_set = np.array(recall)\n","\n","    print(\"Mean Accuracy: {}\".format(accuracy_set.mean()))\n","    print(\"Mean Precision: {}\".format(precision_set.mean()))\n","    print(\"Mean Recall: {}\".format(recall_set.mean()))"],"metadata":{"id":"a5_vkXLMabZL","executionInfo":{"status":"ok","timestamp":1718862282089,"user_tz":-330,"elapsed":449,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}}},"execution_count":22,"outputs":[]},{"cell_type":"markdown","source":["### Logistic Regression"],"metadata":{"id":"tuNt3Cr6mM7L"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","# fit the logistic regression\n","lr = LogisticRegression()\n","\n","cross_validation(lr)"],"metadata":{"id":"F1WXgwptmPc6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718860978742,"user_tz":-330,"elapsed":766,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"674ccf6a-7884-48e0-83d9-5fcfcf631bc6"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["<generator object _BaseKFold.split at 0x7d193493b0d0>\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"stream","name":"stdout","text":["Mean Accuracy: 0.8327647858113423\n","Mean Precision: 0.850632242821281\n","Mean Recall: 0.811276146130728\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]}]},{"cell_type":"markdown","source":["### KNN"],"metadata":{"id":"JHa3J7QacGM7"}},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier\n","\n","# Use 5-fold cross validation for hyper-parameter tuning\n","# Try out different values and choose the best hyper-parameters\n","knn = KNeighborsClassifier(n_neighbors=10)\n","\n","cross_validation(knn)"],"metadata":{"id":"Uf8phNY0bnWh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718860434312,"user_tz":-330,"elapsed":733,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"9cafab03-9d70-4758-8d42-b79b598cdd35"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Accuracy: 0.7973181720660802\n","Mean Precision: 0.7572467394996385\n","Mean Recall: 0.806999642763207\n"]}]},{"cell_type":"markdown","source":["### Random Forest"],"metadata":{"id":"DeuiCypgmhG2"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","\n","# Use 5-fold cross validation for hyper-parameter tuning\n","# Try out different values and choose the best hyper-parameters\n","rf = RandomForestClassifier()\n","\n","cross_validation(rf)"],"metadata":{"id":"nLqScr92mlC1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718862289296,"user_tz":-330,"elapsed":3487,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"c207bf25-bd49-4a2a-be41-7bd8c8e91774"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["<generator object _BaseKFold.split at 0x7d193493b300>\n","Mean Accuracy: 0.8834406064506902\n","Mean Precision: 0.8769751010318918\n","Mean Recall: 0.8783612832078042\n"]}]},{"cell_type":"markdown","source":["### Fit the best model\n","\n","- Select the best model having the highest cross validation accuracy"],"metadata":{"id":"oZXfRpcgm6lC"}},{"cell_type":"code","source":["# Model with the lowest RMSE or highest r2\n","best_model = RandomForestClassifier()\n","\n","# Fit the model on the full training dataset\n","best_model.fit(X, Y)"],"metadata":{"id":"fjYmgy_Rm71f","colab":{"base_uri":"https://localhost:8080/","height":52},"executionInfo":{"status":"ok","timestamp":1718860448875,"user_tz":-330,"elapsed":1288,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"f07bb959-4e35-4ed8-8a66-b97a20144ce4"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["### Load the test data"],"metadata":{"id":"uFFO9-FunNo1"}},{"cell_type":"code","source":["# load the test data\n","data_test = pd.read_csv(TEST_CSV)\n","data_test.head()"],"metadata":{"id":"UQ4DhtLsnPNP","colab":{"base_uri":"https://localhost:8080/","height":256},"executionInfo":{"status":"ok","timestamp":1718863207568,"user_tz":-330,"elapsed":1718,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"aff7a0e7-2952-4971-b717-e2cf28b895f8"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       RMSE  SPECTRAL_CENTROID  SPECTRAL_BANDWIDTH      ROLLOFF  \\\n","0  0.026849         832.086593          810.192938  1329.012733   \n","1  0.206735         907.941817         1192.034489  1882.995793   \n","2  0.127130        1575.713245         1660.819435  3097.551270   \n","3  0.091557        1349.112548         1824.864434  2982.762733   \n","4  0.098121        2161.061507         2520.661924  4807.536058   \n","\n","   ZERO_CROSSING_RATE  MFCC_FEATURE_0  MFCC_FEATURE_1  MFCC_FEATURE_2  \\\n","0            0.060761      -397.64313      202.891080      -18.314198   \n","1            0.041305      -173.60980      176.481120      -17.487156   \n","2            0.082715      -152.60316      131.967160      -38.519390   \n","3            0.043472      -191.74979      126.553510      -14.354351   \n","4            0.077603      -143.44803       86.847534        3.254393   \n","\n","   MFCC_FEATURE_3  MFCC_FEATURE_4  ...  MFCC_FEATURE_11  MFCC_FEATURE_12  \\\n","0        4.595671        7.464968  ...        -8.863886        -3.232259   \n","1       64.209940       12.764759  ...         0.397927        -0.608402   \n","2       26.204031       -2.906238  ...        -7.109600       -21.862885   \n","3       44.730534        6.745143  ...        -0.156913        -4.892558   \n","4       34.360985       25.463150  ...         5.298623         6.359572   \n","\n","   MFCC_FEATURE_13  MFCC_FEATURE_14  MFCC_FEATURE_15  MFCC_FEATURE_16  \\\n","0        -2.563379        -0.046393         2.097677        -5.204055   \n","1         5.595345         6.094729        -0.741953        -0.132119   \n","2       -18.213646       -12.271697        -6.269111       -10.996242   \n","3        -2.856394        -1.636412        -1.651337        -9.099241   \n","4         7.874352        -3.941005        -5.958016        -8.297595   \n","\n","   MFCC_FEATURE_17  MFCC_FEATURE_18  MFCC_FEATURE_19            LABEL  \n","0        -7.896916        -1.224250        -2.038627            piano  \n","1         3.050113         3.534066         2.216849  electric_guitar  \n","2        -6.022158        -9.656895        -3.849789            piano  \n","3        -1.596109        -5.335640        -3.951504            piano  \n","4       -10.491979        -5.848084         7.938865            piano  \n","\n","[5 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-e9c30c05-6b53-47c8-aef6-272b2ec94571\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>RMSE</th>\n","      <th>SPECTRAL_CENTROID</th>\n","      <th>SPECTRAL_BANDWIDTH</th>\n","      <th>ROLLOFF</th>\n","      <th>ZERO_CROSSING_RATE</th>\n","      <th>MFCC_FEATURE_0</th>\n","      <th>MFCC_FEATURE_1</th>\n","      <th>MFCC_FEATURE_2</th>\n","      <th>MFCC_FEATURE_3</th>\n","      <th>MFCC_FEATURE_4</th>\n","      <th>...</th>\n","      <th>MFCC_FEATURE_11</th>\n","      <th>MFCC_FEATURE_12</th>\n","      <th>MFCC_FEATURE_13</th>\n","      <th>MFCC_FEATURE_14</th>\n","      <th>MFCC_FEATURE_15</th>\n","      <th>MFCC_FEATURE_16</th>\n","      <th>MFCC_FEATURE_17</th>\n","      <th>MFCC_FEATURE_18</th>\n","      <th>MFCC_FEATURE_19</th>\n","      <th>LABEL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.026849</td>\n","      <td>832.086593</td>\n","      <td>810.192938</td>\n","      <td>1329.012733</td>\n","      <td>0.060761</td>\n","      <td>-397.64313</td>\n","      <td>202.891080</td>\n","      <td>-18.314198</td>\n","      <td>4.595671</td>\n","      <td>7.464968</td>\n","      <td>...</td>\n","      <td>-8.863886</td>\n","      <td>-3.232259</td>\n","      <td>-2.563379</td>\n","      <td>-0.046393</td>\n","      <td>2.097677</td>\n","      <td>-5.204055</td>\n","      <td>-7.896916</td>\n","      <td>-1.224250</td>\n","      <td>-2.038627</td>\n","      <td>piano</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.206735</td>\n","      <td>907.941817</td>\n","      <td>1192.034489</td>\n","      <td>1882.995793</td>\n","      <td>0.041305</td>\n","      <td>-173.60980</td>\n","      <td>176.481120</td>\n","      <td>-17.487156</td>\n","      <td>64.209940</td>\n","      <td>12.764759</td>\n","      <td>...</td>\n","      <td>0.397927</td>\n","      <td>-0.608402</td>\n","      <td>5.595345</td>\n","      <td>6.094729</td>\n","      <td>-0.741953</td>\n","      <td>-0.132119</td>\n","      <td>3.050113</td>\n","      <td>3.534066</td>\n","      <td>2.216849</td>\n","      <td>electric_guitar</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.127130</td>\n","      <td>1575.713245</td>\n","      <td>1660.819435</td>\n","      <td>3097.551270</td>\n","      <td>0.082715</td>\n","      <td>-152.60316</td>\n","      <td>131.967160</td>\n","      <td>-38.519390</td>\n","      <td>26.204031</td>\n","      <td>-2.906238</td>\n","      <td>...</td>\n","      <td>-7.109600</td>\n","      <td>-21.862885</td>\n","      <td>-18.213646</td>\n","      <td>-12.271697</td>\n","      <td>-6.269111</td>\n","      <td>-10.996242</td>\n","      <td>-6.022158</td>\n","      <td>-9.656895</td>\n","      <td>-3.849789</td>\n","      <td>piano</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.091557</td>\n","      <td>1349.112548</td>\n","      <td>1824.864434</td>\n","      <td>2982.762733</td>\n","      <td>0.043472</td>\n","      <td>-191.74979</td>\n","      <td>126.553510</td>\n","      <td>-14.354351</td>\n","      <td>44.730534</td>\n","      <td>6.745143</td>\n","      <td>...</td>\n","      <td>-0.156913</td>\n","      <td>-4.892558</td>\n","      <td>-2.856394</td>\n","      <td>-1.636412</td>\n","      <td>-1.651337</td>\n","      <td>-9.099241</td>\n","      <td>-1.596109</td>\n","      <td>-5.335640</td>\n","      <td>-3.951504</td>\n","      <td>piano</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.098121</td>\n","      <td>2161.061507</td>\n","      <td>2520.661924</td>\n","      <td>4807.536058</td>\n","      <td>0.077603</td>\n","      <td>-143.44803</td>\n","      <td>86.847534</td>\n","      <td>3.254393</td>\n","      <td>34.360985</td>\n","      <td>25.463150</td>\n","      <td>...</td>\n","      <td>5.298623</td>\n","      <td>6.359572</td>\n","      <td>7.874352</td>\n","      <td>-3.941005</td>\n","      <td>-5.958016</td>\n","      <td>-8.297595</td>\n","      <td>-10.491979</td>\n","      <td>-5.848084</td>\n","      <td>7.938865</td>\n","      <td>piano</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 26 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9c30c05-6b53-47c8-aef6-272b2ec94571')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e9c30c05-6b53-47c8-aef6-272b2ec94571 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e9c30c05-6b53-47c8-aef6-272b2ec94571');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1e99f16e-2052-4599-a092-01abb3eabbe4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1e99f16e-2052-4599-a092-01abb3eabbe4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1e99f16e-2052-4599-a092-01abb3eabbe4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_test"}},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["### Encode the test data as well"],"metadata":{"id":"c2zC3BOLqczw"}},{"cell_type":"code","source":["# encode the labels\n","data_test[\"LABEL\"] = pd.factorize(data_test[\"LABEL\"], sort = True)[0]\n","data_test[\"LABEL\"].value_counts()"],"metadata":{"id":"Hs3NWnpkoYT-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718863212081,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"f8e19672-09fe-437c-879e-907777fff2cf"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LABEL\n","1    153\n","0    144\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["### Seperate features and labels"],"metadata":{"id":"U5awlupfqfYY"}},{"cell_type":"code","source":["# all the rows\n","# all the columns without the last column\n","x_test = data_test.iloc[:, : -1]\n","# all rows\n","# only the lastb column, which is the label\n","y_test = data_test.iloc[:, -1]"],"metadata":{"id":"X9-2tBt8nWuU","executionInfo":{"status":"ok","timestamp":1718863214824,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}}},"execution_count":26,"outputs":[]},{"cell_type":"markdown","source":["### Use the best model to make predictions"],"metadata":{"id":"NI8BrkzJq1Wz"}},{"cell_type":"code","source":["# make predictions\n","predictions = best_model.predict(x_test)\n","print(predictions)"],"metadata":{"id":"aCc0qiosq3bb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718863222403,"user_tz":-330,"elapsed":2,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"827cfca7-6211-4712-8ba7-55d26864c9bf"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 0 1 1 0 0 1 0 0 0 0 1 0 1 1 1 1\n"," 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 1 1 0 1 0 1 1 1 0\n"," 1 0 0 1 0 0 1 1 1 0 1 1 0 1 0 1 1 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 1 1 1 0 1\n"," 1 1 0 1 1 1 0 1 0 1 0 0 0 0 1 1 0 0 1 0 1 0 0 0 1 1 1 0 0 0 0 1 1 1 1 1 1\n"," 1 1 0 1 0 1 1 0 0 0 1 1 1 1 1 0 1 1 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 1 0 0\n"," 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0 1 1 0\n"," 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 0 1 0 0 1 0 0 0 1\n"," 0 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0\n"," 1]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:432: UserWarning: X has feature names, but RandomForestClassifier was fitted without feature names\n","  warnings.warn(\n"]}]},{"cell_type":"markdown","source":["### Evaluate the test data"],"metadata":{"id":"qmT4zo0krAeT"}},{"cell_type":"code","source":["#evaluation function\n","\n","def model_evaluations(y_true, y_pred, labels):\n","  import matplotlib.pyplot as plt\n","  import seaborn as sns\n","  from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n","\n","  acc_score = accuracy_score(y_true, y_pred)\n","  print(\"Accuracy score: {}\\n\".format(acc_score))\n","\n","  print(\"Classification Report: {}\".format(classification_report(y_true, y_pred)))\n","\n","  plt.figure(figsize = (5, 5))\n","  sns.heatmap(confusion_matrix(y_true, y_pred),  annot = True, fmt=\"g\", cmap = \"Blues\", xticklabels = labels, yticklabels = labels)\n","  plt.title(\"Consfuion Matrix\")\n","  plt.show()\n"],"metadata":{"id":"CoZTbD-1q80i","executionInfo":{"status":"ok","timestamp":1718863410150,"user_tz":-330,"elapsed":442,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["# run the evaluation functions\n","model_evaluations(y_test, predictions, LABELS)"],"metadata":{"id":"gfssPUtStA9s","colab":{"base_uri":"https://localhost:8080/","height":664},"executionInfo":{"status":"ok","timestamp":1718863365869,"user_tz":-330,"elapsed":563,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"d27ce391-7d8c-4331-90ae-f521ee8af085"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy score: 0.8787878787878788\n","\n","Classification Report:               precision    recall  f1-score   support\n","\n","           0       0.86      0.90      0.88       144\n","           1       0.90      0.86      0.88       153\n","\n","    accuracy                           0.88       297\n","   macro avg       0.88      0.88      0.88       297\n","weighted avg       0.88      0.88      0.88       297\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Save the best model\n","\n","- Make sure to donwload the model when you are planning to use the model later."],"metadata":{"id":"Y96cMnp_uyJu"}},{"cell_type":"code","source":["import pickle\n","\n","fh = open(\"/content/drive/MyDrive/AIClub_AP_Shree_Krishna/Datasets/music_instruments_best_model\", \"wb\")\n","pickle.dump(best_model, fh)\n","fh.close()"],"metadata":{"id":"MQqy9yzruzxk","colab":{"base_uri":"https://localhost:8080/","height":216},"executionInfo":{"status":"error","timestamp":1718863398595,"user_tz":-330,"elapsed":437,"user":{"displayName":"Shree krishna Ganguri","userId":"00482741206815251819"}},"outputId":"b9743c48-6e99-4a81-a13c-66c46d3c8234"},"execution_count":32,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '/content/drive/MyDrive/AIClub_AP_Shree_Krishna/Datasets/music_instruments_best_model'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-32-44b4945fb5ae>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpickle\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mfh\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/content/drive/MyDrive/AIClub_AP_Shree_Krishna/Datasets/music_instruments_best_model\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"wb\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mpickle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdump\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbest_model\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfh\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mfh\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/AIClub_AP_Shree_Krishna/Datasets/music_instruments_best_model'"]}]},{"cell_type":"code","source":[],"metadata":{"id":"h-lthGkFM8Fr"},"execution_count":null,"outputs":[]}]}